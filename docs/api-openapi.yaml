openapi: 3.0.3
info:
  title: Duoc-Point API
  version: 1.0.0
  description: Esquema de la API
paths:
  /api/auth/login:
    post:
      operationId: auth_login_create
      description: |-
        Realiza un login básico basado en correo y contraseña.

        Actualmente sólo valida que el correo pertenezca al dominio
        institucional. No existe lógica de recuperación de contraseña ni
        flujo de activación.  En el futuro esta vista debería reemplazarse
        por un proceso completo de autenticación.
      tags:
      - auth
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/bienestar:
    get:
      operationId: bienestar_list
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - bienestar
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBienestarItemList'
          description: ''
  /api/cursos/:
    get:
      operationId: cursos_list
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - cursos
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCursoList'
          description: ''
    post:
      operationId: cursos_create
      tags:
      - cursos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curso'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Curso'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Curso'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
          description: ''
  /api/cursos/{id}/:
    get:
      operationId: cursos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este curso.
        required: true
      tags:
      - cursos
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
          description: ''
    put:
      operationId: cursos_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este curso.
        required: true
      tags:
      - cursos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curso'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Curso'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Curso'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
          description: ''
    patch:
      operationId: cursos_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este curso.
        required: true
      tags:
      - cursos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCurso'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCurso'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCurso'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
          description: ''
    delete:
      operationId: cursos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este curso.
        required: true
      tags:
      - cursos
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/foros:
    get:
      operationId: foros_list
      description: |-
        Lista los foros disponibles filtrando por sede y carrera.

        El frontend utilizará este endpoint para mostrar los foros
        pertinentes al usuario según su sede y carrera.
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - foros
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedForoList'
          description: ''
  /api/horarios:
    get:
      operationId: horarios_list
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - horarios
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHorarioList'
          description: ''
    post:
      operationId: horarios_create
      tags:
      - horarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Horario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Horario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Horario'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Horario'
          description: ''
  /api/horarios/{id}:
    get:
      operationId: horarios_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - horarios
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Horario'
          description: ''
    put:
      operationId: horarios_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - horarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Horario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Horario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Horario'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Horario'
          description: ''
    patch:
      operationId: horarios_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - horarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHorario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHorario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHorario'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Horario'
          description: ''
    delete:
      operationId: horarios_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - horarios
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/horarios/import/{id}:
    get:
      operationId: horarios_import_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - horarios
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleImport'
          description: ''
  /api/horarios/import/pdf:
    post:
      operationId: horarios_import_pdf_create
      description: Upload a PDF with the official schedule and queue a parsing task.
      tags:
      - horarios
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScheduleImport'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleImport'
          description: ''
  /api/me:
    get:
      operationId: me_retrieve
      description: Retorna los datos del usuario autenticado.
      tags:
      - me
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/polls:
    post:
      operationId: polls_create
      description: Crea una nueva encuesta asociada a un post del foro.
      tags:
      - polls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PollCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PollCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollCreate'
          description: ''
  /api/polls/{id}:
    get:
      operationId: polls_retrieve
      description: Devuelve los detalles de una encuesta con sus resultados.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - polls
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
          description: ''
  /api/polls/{id}/votar:
    post:
      operationId: polls_votar_create
      description: Registra votos del usuario autenticado para una encuesta.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - polls
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/portfolio:
    get:
      operationId: portfolio_retrieve
      tags:
      - portfolio
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/posts:
    get:
      operationId: posts_list
      description: Lista posts de un foro y permite crear nuevas publicaciones.
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - posts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostList'
          description: ''
    post:
      operationId: posts_create
      description: Lista posts de un foro y permite crear nuevas publicaciones.
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/posts/{id}/comentarios:
    post:
      operationId: posts_comentarios_create
      description: Crea un comentario dentro de un post.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comentario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comentario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comentario'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comentario'
          description: ''
  /api/posts/{id}/votar:
    post:
      operationId: posts_votar_create
      description: Registra el voto del usuario para un post.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/push/subscribe:
    post:
      operationId: push_subscribe_create
      tags:
      - push
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushSub'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PushSub'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PushSub'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushSub'
          description: ''
  /api/push/test:
    post:
      operationId: push_test_create
      description: Send a dummy notification to check the service worker.
      tags:
      - push
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/recorridos:
    get:
      operationId: recorridos_list
      description: |-
        Devuelve los pasos de un recorrido para una sede dada.

        Los pasos se entregan ordenados para que el frontend pueda
        mostrarlos como "slides" y, si corresponde, en el mapa.
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - recorridos
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRecorridoPasoList'
          description: ''
  /api/reportes/:
    get:
      operationId: reportes_list
      description: |-
        CRUD básico de reportes.

        * Crear: cualquier usuario autenticado puede reportar problemas.
        * Listar: filtra por sede y estado mediante parámetros query.
        * Actualizar: sólo moderadores o administradores pueden cambiar el
          estado del reporte.
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - reportes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReporteList'
          description: ''
    post:
      operationId: reportes_create
      description: |-
        CRUD básico de reportes.

        * Crear: cualquier usuario autenticado puede reportar problemas.
        * Listar: filtra por sede y estado mediante parámetros query.
        * Actualizar: sólo moderadores o administradores pueden cambiar el
          estado del reporte.
      tags:
      - reportes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reporte'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reporte'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reporte'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reporte'
          description: ''
  /api/reportes/{id}/:
    get:
      operationId: reportes_retrieve
      description: |-
        CRUD básico de reportes.

        * Crear: cualquier usuario autenticado puede reportar problemas.
        * Listar: filtra por sede y estado mediante parámetros query.
        * Actualizar: sólo moderadores o administradores pueden cambiar el
          estado del reporte.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este reporte.
        required: true
      tags:
      - reportes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reporte'
          description: ''
    put:
      operationId: reportes_update
      description: |-
        CRUD básico de reportes.

        * Crear: cualquier usuario autenticado puede reportar problemas.
        * Listar: filtra por sede y estado mediante parámetros query.
        * Actualizar: sólo moderadores o administradores pueden cambiar el
          estado del reporte.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este reporte.
        required: true
      tags:
      - reportes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reporte'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reporte'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reporte'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reporte'
          description: ''
    patch:
      operationId: reportes_partial_update
      description: |-
        CRUD básico de reportes.

        * Crear: cualquier usuario autenticado puede reportar problemas.
        * Listar: filtra por sede y estado mediante parámetros query.
        * Actualizar: sólo moderadores o administradores pueden cambiar el
          estado del reporte.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este reporte.
        required: true
      tags:
      - reportes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReporte'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReporte'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReporte'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reporte'
          description: ''
    delete:
      operationId: reportes_destroy
      description: |-
        CRUD básico de reportes.

        * Crear: cualquier usuario autenticado puede reportar problemas.
        * Listar: filtra por sede y estado mediante parámetros query.
        * Actualizar: sólo moderadores o administradores pueden cambiar el
          estado del reporte.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este reporte.
        required: true
      tags:
      - reportes
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/sedes:
    get:
      operationId: sedes_list
      description: |-
        Entrega todas las sedes disponibles.

        El frontend usará esta lista para dibujar marcadores en el mapa.
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - sedes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSedeList'
          description: ''
components:
  schemas:
    BienestarItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        carrera:
          type: string
          maxLength: 150
        tipo:
          $ref: '#/components/schemas/TipoEnum'
        titulo:
          type: string
          maxLength: 200
        contenido_html:
          type: string
          readOnly: true
        media_url:
          type: string
          format: uri
          maxLength: 200
      required:
      - carrera
      - contenido_html
      - id
      - tipo
      - titulo
    Comentario:
      type: object
      description: Serializador de comentarios.
      properties:
        id:
          type: integer
          readOnly: true
        post:
          type: integer
          readOnly: true
        usuario:
          type: integer
          readOnly: true
        anonimo:
          type: boolean
        cuerpo:
          type: string
        score:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - cuerpo
      - id
      - post
      - score
      - usuario
    Curso:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        titulo:
          type: string
          maxLength: 200
        descripcion:
          type: string
        etiquetas:
          type: string
          maxLength: 200
        url:
          type: string
          format: uri
          maxLength: 200
        fecha_inicio:
          type: string
          format: date
        fecha_fin:
          type: string
          format: date
        visible:
          type: boolean
        vigente:
          type: boolean
          readOnly: true
      required:
      - descripcion
      - etiquetas
      - fecha_fin
      - fecha_inicio
      - id
      - titulo
      - url
      - vigente
    Foro:
      type: object
      description: Representa un foro temático.
      properties:
        id:
          type: integer
          readOnly: true
        sede:
          type: integer
        carrera:
          type: string
          maxLength: 150
        titulo:
          type: string
          maxLength: 150
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - carrera
      - id
      - sede
      - slug
      - titulo
    Horario:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        dia_semana:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        inicio:
          type: string
          format: time
        fin:
          type: string
          format: time
        asignatura:
          type: string
          maxLength: 255
        sala:
          type: string
          maxLength: 255
        editable:
          type: boolean
          readOnly: true
      required:
      - asignatura
      - dia_semana
      - editable
      - fin
      - id
      - inicio
    PaginatedBienestarItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BienestarItem'
    PaginatedCursoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Curso'
    PaginatedForoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Foro'
    PaginatedHorarioList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Horario'
    PaginatedPostList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    PaginatedRecorridoPasoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RecorridoPaso'
    PaginatedReporteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Reporte'
    PaginatedSedeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Sede'
    PatchedCurso:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        titulo:
          type: string
          maxLength: 200
        descripcion:
          type: string
        etiquetas:
          type: string
          maxLength: 200
        url:
          type: string
          format: uri
          maxLength: 200
        fecha_inicio:
          type: string
          format: date
        fecha_fin:
          type: string
          format: date
        visible:
          type: boolean
        vigente:
          type: boolean
          readOnly: true
    PatchedHorario:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        dia_semana:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        inicio:
          type: string
          format: time
        fin:
          type: string
          format: time
        asignatura:
          type: string
          maxLength: 255
        sala:
          type: string
          maxLength: 255
        editable:
          type: boolean
          readOnly: true
    PatchedReporte:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sede:
          type: integer
        categoria:
          type: string
          maxLength: 100
        descripcion:
          type: string
        estado:
          $ref: '#/components/schemas/ReporteEstadoEnum'
        lat:
          type: number
          format: double
        lng:
          type: number
          format: double
        prioridad:
          type: integer
          readOnly: true
        creado_at:
          type: string
          format: date-time
          readOnly: true
        media:
          type: array
          items:
            $ref: '#/components/schemas/ReporteMedia'
    Poll:
      type: object
      description: Detalle de la encuesta incluyendo resultados.
      properties:
        id:
          type: integer
          readOnly: true
        post:
          type: integer
        multi:
          type: boolean
        cierra_at:
          type: string
          format: date-time
          nullable: true
        opciones:
          type: string
          readOnly: true
      required:
      - id
      - opciones
      - post
    PollCreate:
      type: object
      description: Crea una encuesta con un listado de opciones.
      properties:
        id:
          type: integer
          readOnly: true
        post:
          type: integer
        multi:
          type: boolean
        cierra_at:
          type: string
          format: date-time
          nullable: true
        opciones:
          type: array
          items:
            type: string
          writeOnly: true
          minItems: 1
      required:
      - id
      - opciones
      - post
    Post:
      type: object
      description: Serializa posts para listado y creación.
      properties:
        id:
          type: integer
          readOnly: true
        foro:
          type: integer
        usuario:
          type: integer
          readOnly: true
        anonimo:
          type: boolean
        titulo:
          type: string
          maxLength: 200
        cuerpo:
          type: string
        score:
          type: integer
          readOnly: true
        estado:
          allOf:
          - $ref: '#/components/schemas/PostEstadoEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - cuerpo
      - estado
      - foro
      - id
      - score
      - titulo
      - usuario
    PostEstadoEnum:
      enum:
      - publicado
      - revision
      - oculto
      type: string
      description: |-
        * `publicado` - Publicado
        * `revision` - En revisión
        * `oculto` - Oculto
    PushSub:
      type: object
      properties:
        endpoint:
          type: string
        p256dh:
          type: string
        auth:
          type: string
      required:
      - auth
      - endpoint
      - p256dh
    RecorridoPaso:
      type: object
      description: Serializa un paso de recorrido.
      properties:
        orden:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        titulo:
          type: string
          maxLength: 200
        descripcion:
          type: string
        imagen_url:
          type: string
          format: uri
          maxLength: 200
        lat:
          type: number
          format: double
          nullable: true
        lng:
          type: number
          format: double
          nullable: true
      required:
      - descripcion
      - imagen_url
      - orden
      - titulo
    Reporte:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sede:
          type: integer
        categoria:
          type: string
          maxLength: 100
        descripcion:
          type: string
        estado:
          $ref: '#/components/schemas/ReporteEstadoEnum'
        lat:
          type: number
          format: double
        lng:
          type: number
          format: double
        prioridad:
          type: integer
          readOnly: true
        creado_at:
          type: string
          format: date-time
          readOnly: true
        media:
          type: array
          items:
            $ref: '#/components/schemas/ReporteMedia'
      required:
      - categoria
      - creado_at
      - descripcion
      - id
      - lat
      - lng
      - prioridad
      - sede
    ReporteEstadoEnum:
      enum:
      - abierto
      - revision
      - resuelto
      type: string
      description: |-
        * `abierto` - Abierto
        * `revision` - En revisión
        * `resuelto` - Resuelto
    ReporteMedia:
      type: object
      properties:
        url:
          type: string
          format: uri
          maxLength: 200
      required:
      - url
    ScheduleImport:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        parse_log:
          type: string
          readOnly: true
      required:
      - id
      - parse_log
      - status
    Sede:
      type: object
      description: Serializa información de :class:`Sede`.
      properties:
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        nombre:
          type: string
          maxLength: 100
        direccion:
          type: string
          maxLength: 200
        lat:
          type: number
          format: double
        lng:
          type: number
          format: double
      required:
      - direccion
      - lat
      - lng
      - nombre
      - slug
    StatusEnum:
      enum:
      - queued
      - processing
      - done
      - failed
      type: string
      description: |-
        * `queued` - queued
        * `processing` - processing
        * `done` - done
        * `failed` - failed
    TipoEnum:
      enum:
      - kine
      - psico
      type: string
      description: |-
        * `kine` - Kinesiología
        * `psico` - Psicología
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
